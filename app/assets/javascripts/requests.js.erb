$(document).ready(function() {

    var $item_select = $("#item_pid");
    $item_select.select2({
        theme: "bootstrap",
        placeholder: "Make a selection, or start typing to find one",
        width: "100%"
    });

    // show stage2 in modal
    $("#submit-confirm-button").click(function(e) {
        e.preventDefault();
        var selectedOption = $("#item_pid option:selected");
        var form_params = {
            mms_id: document.getElementById("mms_id").value,
            holding_id: document.getElementById("holding_id").value,
            item_pid: $item_select.val(),
            delivery_method: document.getElementById("delivery_method").value,
            issue: selectedOption.data('issue'),
            volume: selectedOption.data('volume'),
            year: selectedOption.data('year')
        }
        $("#confirm-modal").modal({
           remote: '/forms/request/confirm' + '?' + $.param(form_params)
        });
    });

    var $details = $(".dev-details");
    $details.hide();
    $(".show-dev-details").click(function() {
        $(".dev-details").toggle();
    });
});

function clearBootstrapModal() {
    var $confirm_modal = $('#confirm-modal');
    $confirm_modal.removeData('bs.modal');
    $confirm_modal.find('.modal-content').html('');
}

// clear modal content if item or delivery method changes
// FIXME: this wasn't working as expected when the event is a form
// element change - it was showing the old content until the new content
// request had finished. clearing content on modal hide
$(document).on('change', '#delivery_method', function(e) {
    clearBootstrapModal();
});

// update delivery options if item selection changes
$(document).on('change', '#item_pid', function(e) {
    var deliverySelect = document.getElementById('delivery_method');
    deliverySelect.innerHTML = ''
    var selectedOption = $("#item_pid option:selected");
    var deliveryOptions = selectedOption.data('delivery').split(":");
    deliveryOptions.forEach(function(option) {
        var optionText = deliveryOptionLabel(option);
        var optionElement = document.createElement('option');
        optionElement.text = optionText;
        optionElement.value = option;
        deliverySelect.appendChild(optionElement);
    });

    // set holding ID if radio has holding-id data attrib
    var holdingIdInput = document.getElementById("holding_id");
    if(holdingIdInput) {
        holdingIdInput.value = selectedOption.data('holding-id');
    }
    clearBootstrapModal();
});

$(document).on('click', '#confirm_submit_button', function(e) {
    var bbm_validation = document.getElementById('bbm_validation_checkbox');
    if(bbm_validation.validity.valueMissing){
        bbm_validation.setCustomValidity('You must be a registered Books by Mail user to submit this request');
    } else{
        bbm_validation.setCustomValidity('');
    }
});
